module _


type QuestionTask has
    var id int
    var question_id int
    var answer_text str
    var original_owner str
    var state QuestionState

type QuestionState is
    Active or
    InternalReview or
    ExternalReview or
    Complete

type QuestionTaskMessages has
    var question_task_id int
    var timestamp int
    var message str
    var from str

type Active has
    var owner str
tag InternalReview
tag ExternalReview
tag Complete


fn reassign(q QuestionTask, new_owner str) QuestionTask
    n := QuestionTask(
            q.id, q.question_id, q.answer_text, q.original_owner,
            Active(new_owner))
    print("Reassigning " + str(q) + " to " + str(n))
    return n

fn main()
    # Action is: new question task
    q := QuestionTask(1, 1, "", "Boss", Active("Boss"))

    q = reassign(q, "Minion A")
    q = reassign(q, "Minion B")
    q = reassign(q, "Minion C")
    print(str(q))

    # Action is: Jacquie has filled it out
    # resolve(q, "Will")

    # q := QuestionTask(q2.question_id, "Maybe this is the answer", InReview("Will"))

    # close(q)

fn str(q QuestionTask) str
    return ("QuestionTask(" + q.id + ", " + q.question_id + ", " + "\"" + q.answer_text + "\""
            + ", " + q.original_owner + ", " + str(q.state) + ")")

fn str(s QuestionState) str
    match s
        is Active
            return "Active(" + s.owner + ")"
        is InternalReview
            return "InternalReview"
        is ExternalReview
            return "ExternalReview"
        is Complete
            return "Complete"
    return ""
