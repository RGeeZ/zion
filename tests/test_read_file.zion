module _
get file
get os
get sys

# test: pass
# expect: This text should appear

fn main() {
    with fp := file.open(__filename__, "r") {
        while true {
            match readline(fp) {
                Line(line) => print(line)
                EOF        => break
                Error(_)   => break
            }
        }
    } else errno {
        print("Failed to open " + __filename__ + " with error " + errno)
    }

    runtime.gc()
}

macro "with" x := y Block(a) "else" q Block(b)

    # becomes
    match y {
        With(Resource(x, cleanup)) {
            defer fn => cleanup()

            a
        }
        Without(q) b
    }
}

macro "defer" "fn" Statement(a)
    # becomes
    # ensure a deferred list exists
    append(get_stack_deferred(), fn () void { a })

macro "defer" "block" Statement(a)
    # becomes
    # ensure a deferred list exists
    append(get_block_deferred(), fn () void { a })

