module _
# test: skip
# expect: allocating entry for Will: 123
# expect: freeing entry Will: 123
# reject: No name found!

# TODO: clean this up - add in some sort of ability to autoexpand env vars, or compilation params
# link in "build-Darwin/tests/test_link_extern_entry.o"
link in "/tmp/test_link_extern_entry.o"

link fn make_entry(name *char, number int) *?EntryImpl
link fn free_entry(entry *EntryImpl) void
link fn get_name(entry *EntryImpl) *?char
link fn get_number(entry *EntryImpl) int

type EntryImpl struct
type Entry has {
    var entry *EntryImpl
}

[global]
fn __finalize__(entry Entry) {
    free_entry(entry.entry)
}

fn get_name(entry Entry, default str) str {
    let name = get_name(entry.entry)
    if name != null {
        name_copy := posix.strdup(name)
        assert(name_copy != null)
        return str(OwningBuffer(name_copy))
    } else {
        return default
    }
}

fn main() {
    var entry Entry? = Just(Entry(make_entry("Will", 123)!))
    match entry {
        Just(entry) {
            print(get_name(entry, ""))
            static_print(entry)
        }
        Empty {
            print("No name found!")
            static_print(entry)
        }
    }
    static_print(entry)
    entry = Empty
    runtime.gc()
}
