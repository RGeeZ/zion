module test_mandel
# test: pass

link Complex to math.Complex

type Rectangle has
	var x float
	var y float
	var width float
	var height float

def alpha(x float, min float, max float) float
	return (x - min) / (max - min)

def lerp(alpha float, min float, max float) float
	return alpha * (max - min) + min

def main()
	width := 240
	height := 240
	maxDepth := 20

	print("P2")
	print(str(width) + " " + height)
	print(maxDepth)
	r := Rectangle(-3.14159, -2.5, 5.0, 5.0)
	display_grid := Rectangle(0.0, 0.0, float(width), float(height))

	y := display_grid.y
	while y < display_grid.height
		var span [int] = nil
		var b = lerp(alpha(y, display_grid.y, display_grid.y + display_grid.height),
			r.x, r.x + r.width)

		x := display_grid.x
		while x < display_grid.width
			var a = lerp(alpha(x, display_grid.x, display_grid.x + display_grid.width),
				r.y, r.y + r.height)
			var z = math.Complex(b, a)
			var c = z
			var i = 0

			while true
				if i < maxDepth
					if (z.imag * z.imag + z.real * z.real < 16)
						z = z * z + c
						i += 1
						continue
				break
			span = list(i, span)
			x += 1

		print(join(span, " "))

		y += 1.0

