# test: pass
# expect: Found Sequence

import itertools {repeat}
import parser {Node, Symbol, Sequence, parse_token, sequence, any_of,
               kleene_star, parse_symbol, ParseState, Step, char, none_of}


fn parse_quoted_string() {
  var ps = parse_state
  let quote = char("\"")
  return any_of([
    sequence([quote, kleene_star(none_of("\"")), quote]),
    kleene_star(none_of("\",\n\r")),
  ])
}

fn main() {
    let program = "\"hey this, is cool\", 12.400,\t50, true\r\n"
    print(program)
    var parse_state = ParseState(program, 0)
    let parse_fn = sequence([
      kleene_star(sequence([parse_quoted_string, eat_comma])),
      parse_quoted_string()])

    let parser = any_of([parse_fn, parse_token("var")])
    while match parser(parse_state) {
        Just(Step(node, next_parse_state)) {
            print("Found ${node}")
            parse_state = next_parse_state
        }
        Nothing {
            break
        }
    }
}
