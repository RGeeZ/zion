module _
# test: pass

type __Value__ has
	var size __int64__
	var name __str__
	var typeinfo *__TypeInfo__

type __TypeInfo__ has
	var typeid __typeid__
	var addref *def (v *__Value__) void
	var release *def (v *__Value__) void

def addref(v *__Value__) void
	pass

def release(v *__Value__) void
	pass

type __TwoInts__ has
	var x __int__
	var y __int__

type TwoInts has
	var x int
	var y int

def main()
	# With standard aligned sizeof we get some extra padding for the managed
	# types
	print(__sizeof__(__TwoInts__))  # 16
	print(__sizeof__(TwoInts))      # 72
	print(__sizeof__(__TypeInfo__)) # 24

