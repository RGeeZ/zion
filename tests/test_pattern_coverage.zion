module _

type Pet is {
    Dog
    Cat
}

type Child is {
    Girl(name str, hair HairType, pet Pet?)
    Boy(name str, hair HairType, pet Pet?)
}

type HairType is {
    Straight
    Curly
    Wavy
    Bald
}

fn main() {
    mark := Boy("Mark", Wavy, Nothing)
    charlotte := Girl("Charlotte", Straight, Just(Dog))
    # etc...

    kids := [charlotte, mark]

    for kid in kids {
        # error: 29:15.* not all patterns are covered
        match kid {
            Boy(name, Curly, Just(Dog)) {
                print(name + " has curly hair and a dog")
            }
            Boy(name, Curly, Just(Cat)) {
                print(name + " has curly hair and a cat")
            }
            Boy(name, _, _) {}
            Girl(name, _, Nothing) {
                print(name + " might have hair and might have a pet")
            }
            Girl(name, Straight, Just(Cat)) {
                print(name + " has straight hair and has a cat")
            }
        }
    }
}
                
