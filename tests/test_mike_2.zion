module _
# test: pass
# expect: 13
# expect: 11.00

type Expr T is {
    Plus(lhs Expr T, rhs Expr T)
    Times(lhs Expr T, rhs Expr T)
    Value(x T)
}

fn eval[T](expr Expr T) T {
    match expr {
        Plus(lhs, rhs)  => return eval(lhs) + eval(rhs)
        Times(lhs, rhs) => return eval(lhs) * eval(rhs)
        Value(x)        => return x
    }
}

fn main() {
    print(eval(Plus(Times(Value(5), Value(2)), Value(3))))
    print(eval(Plus(Times(Value(4.0), Value(2.0)), Value(3.0))))
}
