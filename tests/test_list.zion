module _
# test: pass

type ListInt is {
    NodeInt(value int, next ListInt)
    Done
}

fn len(l ListInt) int {
    match l {
        Done {
            return 0
        }
        NodeInt(_, next) {
            return 1 + len(next)
        }
    }
}

fn sum(l ListInt) int {
    match l {
        Done {
            return 0
        }
        NodeInt(value, next) {
            return value + sum(next)
        }
    }
}

fn main() {
    l := NodeInt(1, NodeInt(2, NodeInt(3, Done)))
    print(len(l))
    print(sum(l))
}
