module _
# test: pass

type ListInt is {
    NodeInt(value int, next ListInt)
    Done
}

fn len(l ListInt) int {
    return match l {
        Done => 0
        NodeInt(_, next) => 1 + len(next)
    }
}

fn sum(l ListInt) int {
    return match l {
        Done => 0
        NodeInt(value, next) => value + sum(next)
    }
}

fn main() {
    l := NodeInt(1, NodeInt(2, NodeInt(3, Done)))
    print(len(l))
    print(sum(l))
}
