module _
link module sys
link module math
link module posix
link module main
# test: pass

def main()
	var primes [int]
	i := 1
	var x bool = true
	static_print((true or false) and 3 or "foo")
	print(sys.args)
	target := len(sys.args) == 2 ? int(sys.args[1]) : 30
	while i <= target
		if is_prime(i)
			append(primes, i)
		i += 1
	print(primes)

def is_prime(i int) bool
	# get the max we need to search
	j := math.min(i, int(math.sqrt(float(i)) + 1))
	k := 2
	while k < j
		if i % k == 0
			return false
		k += 1

	return true
