module _
# test: pass
# expect: 11

type Expr is {
    Plus(lhs Expr, rhs Expr)
    Times(lhs Expr, rhs Expr)
    Value(x int)
}

fn eval(expr Expr) int {
    match expr {
        Plus(lhs, rhs) {
            return eval(lhs) + eval(rhs)
        }
        Times(lhs, rhs) {
            return eval(lhs) * eval(rhs)
        }
        Value(x) {
            return x
        }
    }
}

fn main() {
    let e Expr = Value(3)
    print(eval(Plus(Times(Value(4), Value(2)), Value(3))))
}
