module _
# test: pass
# expect: 11

# This tests whether we can instantiate recursive abstract types when they are
# not necessary.

type Plus has
	var lhs Expr
	var rhs Expr

type Times has
	var lhs Expr
	var rhs Expr

type Expr is
	Plus or
	Times or
	int

def eval(expr Expr) int
	when expr
		is Plus
			return eval(expr.lhs) + eval(expr.rhs)
		is Times
			return eval(expr.lhs) * eval(expr.rhs)
		is int
			return expr

def main()
	let e Expr = 3
	print(eval(Plus(Times(4, 2), 3)))
