module _

type Pair L R is { Pair(l L, r R) }
fn m(l, r) int => match Pair(l, r) {
    Pair(Just(l), Just(r)) => l * r
    Pair(Nothing, Just(r)) => r
    Pair(Just(l), Nothing) => l
    Pair(Nothing, Nothing) => 1
}

fn main() int {
    k := m(Just(2), Just(4))
    print(k)
    return k
}
