module _
# test: pass
# expect: 11

type Expr is {
    Plus(lhs Expr, rhs Expr)
    Value(x int)
}

fn eval[T where T <: Expr](e T) int {
    match e {
        Plus(lhs, rhs) {
            return eval(lhs) + eval(rhs)
        }
        Value(e) {
            return e
        }
    }
}

fn main() {
    print(eval(Plus(Value(2), Plus(Value(4), Value(5)))))
}
