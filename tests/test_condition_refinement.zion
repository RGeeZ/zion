module _
# test: pass
# expect: 7 : int
# expect: "hello" : str
# expect: gimme_bool() : bool
# expect: gimme_bool() ? "foo" : 4.5 : str or float
# expect: (gimme_bool() and int("9")) : int or false
# expect: ((gimme_bool() and int("9")) or 200) : int
# expect: (true and 100) : int
# expect: (false and 100) : false
# expect: (true or 100) : true
# expect: (false or 100) : int
# expect: (9 or null) : int?
# expect: x : &int?
# expect: (x or 10) : int
# expect: ((x != null) and x) : int or false
# expect: x or 10 = 3


def gimme_bool() bool
	return true

def __bool__(x False or Int) bool
	when x
		is False
			return false
		is Int
			return x.raw != 0

def main()
	static_print(7)
	static_print("hello")
	static_print(gimme_bool())
	static_print(gimme_bool() ? "foo" : 4.5)
	static_print(gimme_bool() and int("9"))
	static_print(gimme_bool() and int("9") or 200)
	static_print(true and 100)
	static_print(false and 100)
	static_print(true or 100)
	static_print(false or 100)
	static_print(9 or null)
	var x int? = 3
	static_print(x)
	static_print(x or 10)
	static_print(x != null and x)
	if x != null
		print("x or 10 = " + (x or 10))

