module posix

link def getenv(x *__char__) *__char__
link def puts(x *__char__) __int__
link def perror(x *__char__) __int__
link def open(path *__char__, oflag __int__) __int__
link def close(fd __int__) __int__
link def read(fileds __int__, buf *__int8__, nbytes __int__) __int__
link def write(fileds __int__, buf *__int8__, nbytes __int__) __int__
link def malloc(cb __int__) *void
link def memcpy(dst *__int8__, src *__int8__, n __int__) *__int8__
link def free(pb *void) *__int8__
link def calloc(cb __int__, size __int__) *void
link def strdup(s *__char__) *__char__
link def strcmp(x *__char__, y *__char__) __int__
link def sqrt(x __float__) __float__
link def rand() __int__
link def exit(code __int__) __int__
link def getch() __int__
link def getcwd(space *__char__) *__char__
link def raise(signal __int__) __int__

var SIGTRAP __int__ = 5r
var SIGKILL __int__ = 9r
