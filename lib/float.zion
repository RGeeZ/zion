global

link in "rt_float.o"

link def float(x int) float to __float_int
link def float(x *char) float to __float_from_utf8
link def float(x *wchar) float to __float_from_utf32
link def __negative__(x float) float to __float_neg
link def __positive__(x float) float to __float_pos
link def __plus__(x float, y int) float to __float_plus_int
link def __minus__(x float, y int) float to __float_minus_int
link def __times__(x float, y int) float to __float_times_int
link def __divide__(x float, y int) float to __float_divide_int
link def __plus__(x float, y float) float to __float_plus_float
link def __minus__(x float, y float) float to __float_minus_float
link def __times__(x float, y float) float to __float_times_float
link def __divide__(x float, y float) float to __float_divide_float
link def __gt__(x float, y float) bool to __float_gt_float
link def __lt__(x float, y float) bool to __float_lt_float
link def __lt__(x float, y int) bool to __float_lt_int
link def __gte__(x float, y float) bool to __float_gte_float
link def __lte__(x float, y float) bool to __float_lte_float
link def __lte__(x float, y int) bool to __float_lte_int
link def __eq__(x float, y float) bool to __float_eq_float
link def __ineq__(x float, y float) bool to __float_ineq_float

type Float has
	let raw float

def __box__(i float) Float
	return Float(i)

def __unbox__(f Float) float
	return f.raw

