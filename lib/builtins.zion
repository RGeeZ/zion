global

type signed bits = integer(bits, true)
type unsigned bits = integer(bits, false)

# TODO: inject correct size for platform from reader macro
type int = signed 64
type uint = unsigned 64

type size_t = unsigned 64
type ssize_t = signed 64

type int64 = signed 64
type uint64 = unsigned 64

type int32 = signed 32
type uint32 = unsigned 32

type int16 = signed 16
type uint16 = unsigned 16

type int8 = signed 8
type uint8 = unsigned 8

type CtorID = uint32

type var_t struct {
    var ctor_id CtorID

    #
    # THE ACTUAL DATA IS APPENDED HERE
    #
}

type str_literal_t struct {
    ## DATA
    ctor_id CtorID
    buffer *owning_buffer_literal_t
    start uint
    length uint
}

type owning_buffer_literal_t struct {
    ctor_id CtorID
    ## DATA
    raw *char
    length uint
}

type __closure_t FN has {
    fn FN
}
