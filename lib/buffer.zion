global


type OwningBuffer CharType has {
    let raw *CharType
    let length uint
}

fn __getitem__[CharType](buffer OwningBuffer CharType, i uint) CharType {
    assert(buffer.length >= i)
    return buffer.raw[i]
}

fn OwningBuffer[T where *?char <: T](s T) (OwningBuffer char)? {
    return (s != null
        ? Just(OwningBuffer(s, posix.strlen(s)))
        : Nothing)
    }

fn OwningBuffer(s *char) OwningBuffer char {
    return OwningBuffer(s, posix.strlen(s))
}
