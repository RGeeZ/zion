module os
get posix

def getcwd() str
	cwd_utf8 := posix.getcwd(null)
	assert(cwd_utf8 != null)
	return str(OwningBuffer(cwd_utf8))

def getenv(name str) str?
	match OwningBuffer(posix.getenv(name))
		Just(buffer)
			return Just(str(buffer))
		Empty
			return Empty

def shell(cmd str) [str]
	return shell(cmd, Empty)

def shell(cmd_parts [str]) [str]
	return shell(cmd_parts)

def shell(cmd_parts [str], pipe_text str) [str]
	cmd := join(" ", cmd_parts)
	return shell(join(" ", cmd_parts), Just(pipe_text))

def shell(cmd str, pipe_text str?) [str]
	# print("Running " + cmd)
	fp := posix.popen(cmd, "r+")
	assert(fp != null)

	match pipe_text
		Just(text)
			# print("Writing " + pipe_text + " to the process...")
			ret := posix.fprintf(fp, "%s", text)
			assert(ret >= 0)
			posix.fflush(fp)
		Empty
			pass

	var lines [str]
	for line in readlines(fp)
		append(lines, line)
	posix.pclose(fp)
	return lines
