data List x {
    Cons(x, var (List x))
    Nil
}

fn nth(l List x, index Int) Maybe x {
    var rl = l
    var i = 0
    while match rl {
        Cons(x, var next) {
            if i == index {
                return Just(x)
            } else {
                rl = next
                i += 1
            }
        }
        Nil {
            return Nothing
        }
    }
    return Nothing
}

instance Iterable (List a) a {
    fn iter(list List a) {
        var list = list
        return fn () Maybe a {
            match list {
                Cons(x, var next) {
                    list = next
                    return Just(x)
                }
                Nil {
                    return Nothing
                }
            }
        }
    }
}

instance Show (List a) {
    fn str(list) {
        return join(", ", list)
    }
}
