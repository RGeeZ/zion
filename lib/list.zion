module list

type List T has
	var value T
	var next (List T)?

def nth[T](l (List T)?, index int) T?
	if l
		if index == 0
			return l.value
		else
			return nth(l.next, index - 1)

	return null

[global]
def len(l (List any)?) int
	if l != null
		return len(l.next) + 1
	return 0

def conj[T](maybe_list (List T)?, item T) List T
	if maybe_list != null
		return List(item, maybe_list)
	return List(item, null)

[global]
def str(l (List any)?) str
	return "[...list...]"
