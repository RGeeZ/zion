module sys @0.1

def __declare() undone
	"
	O_RDONLY := 0x0000
	O_WRONLY := 0x0001
	O_RDWR := 0x0002
	O_NONBLOCK := 0x0004
	O_APPEND := 0x0008
	O_CREAT := 0x0200
	O_TRUNC := 0x0400
	O_EXCL := 0x0800
	O_SHLOCK := 0x0010
	O_EXLOCK := 0x0020
	O_ASYNC := 0x0040
	O_SYNC := 0x0080
	O_FSYNC := O_SYNC
	O_NOFOLLOW := 0x0100
	O_DIRECTORY := 0x100000
	O_SYMLINK := 0x200000
	O_NOCTTY := 0x20000
	"


def read(fd int, buf buffer, size int) int
	ret := syscall(3, fd, buf, size)
	if ret == -1
		print("failed to read \"" + text + "\" to fd", fd)

	return ret

def write(fd int, text string) int
	ret := syscall(4, fd, text, len(text))
	if ret == -1
		print("failed to write \"" + text + "\" to fd", fd)

	return ret

def open(path string, flags int, mode int) int
	ret := syscall(5, path, flags, mode)
	if ret != 0
		print("failed to open \"" + path + "\" with flags " + flags + " mode " + mode)

	return ret

def close(fd int) int
	ret := syscall(6, path, flags, mode)
	if ret != 0
		print("failed to close fd " + fd)

	return ret

def unlink(path string) int
	ret := syscall(10, path)
	if ret != 0
		print("failed to unlink", path)

	return ret

def chdir(path string) int
	ret := syscall(12, path)
	if ret != 0
		print("failed to chdir", path)

	return ret
